/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.upc.freeling;

public class freelingJNI {
  public final static native long new_VectorWord__SWIG_0();
  public final static native long new_VectorWord__SWIG_1(long jarg1);
  public final static native long VectorWord_size(long jarg1, VectorWord jarg1_);
  public final static native long VectorWord_capacity(long jarg1, VectorWord jarg1_);
  public final static native void VectorWord_reserve(long jarg1, VectorWord jarg1_, long jarg2);
  public final static native boolean VectorWord_empty(long jarg1, VectorWord jarg1_);
  public final static native void VectorWord_clear(long jarg1, VectorWord jarg1_);
  public final static native void VectorWord_pushBack(long jarg1, VectorWord jarg1_, long jarg2, Word jarg2_);
  public final static native long VectorWord_get(long jarg1, VectorWord jarg1_, int jarg2);
  public final static native void VectorWord_set(long jarg1, VectorWord jarg1_, int jarg2, long jarg3, Word jarg3_);
  public final static native void delete_VectorWord(long jarg1);
  public final static native long new_ListWord();
  public final static native long ListWord_size(long jarg1, ListWord jarg1_);
  public final static native boolean ListWord_empty(long jarg1, ListWord jarg1_);
  public final static native void ListWord_clear(long jarg1, ListWord jarg1_);
  public final static native void ListWord_pushBack(long jarg1, ListWord jarg1_, long jarg2, Word jarg2_);
  public final static native long ListWord_get(long jarg1, ListWord jarg1_, int jarg2);
  public final static native void delete_ListWord(long jarg1);
  public final static native long new_ListAnalysis();
  public final static native long ListAnalysis_size(long jarg1, ListAnalysis jarg1_);
  public final static native boolean ListAnalysis_empty(long jarg1, ListAnalysis jarg1_);
  public final static native void ListAnalysis_clear(long jarg1, ListAnalysis jarg1_);
  public final static native void ListAnalysis_pushBack(long jarg1, ListAnalysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native long ListAnalysis_get(long jarg1, ListAnalysis jarg1_, int jarg2);
  public final static native void delete_ListAnalysis(long jarg1);
  public final static native long new_ListSentence();
  public final static native long ListSentence_size(long jarg1, ListSentence jarg1_);
  public final static native boolean ListSentence_empty(long jarg1, ListSentence jarg1_);
  public final static native void ListSentence_clear(long jarg1, ListSentence jarg1_);
  public final static native void ListSentence_pushBack(long jarg1, ListSentence jarg1_, long jarg2, Sentence jarg2_);
  public final static native long ListSentence_get(long jarg1, ListSentence jarg1_, int jarg2);
  public final static native void delete_ListSentence(long jarg1);
  public final static native long new_ListParagraph();
  public final static native long ListParagraph_size(long jarg1, ListParagraph jarg1_);
  public final static native boolean ListParagraph_empty(long jarg1, ListParagraph jarg1_);
  public final static native void ListParagraph_clear(long jarg1, ListParagraph jarg1_);
  public final static native void ListParagraph_pushBack(long jarg1, ListParagraph jarg1_, long jarg2, Paragraph jarg2_);
  public final static native long ListParagraph_get(long jarg1, ListParagraph jarg1_, int jarg2);
  public final static native void delete_ListParagraph(long jarg1);
  public final static native long new_ListString();
  public final static native long ListString_size(long jarg1, ListString jarg1_);
  public final static native boolean ListString_empty(long jarg1, ListString jarg1_);
  public final static native void ListString_clear(long jarg1, ListString jarg1_);
  public final static native void ListString_pushBack(long jarg1, ListString jarg1_, String jarg2);
  public final static native String ListString_get(long jarg1, ListString jarg1_, int jarg2);
  public final static native void delete_ListString(long jarg1);
  public final static native long new_ListInt();
  public final static native long ListInt_size(long jarg1, ListInt jarg1_);
  public final static native boolean ListInt_empty(long jarg1, ListInt jarg1_);
  public final static native void ListInt_clear(long jarg1, ListInt jarg1_);
  public final static native void ListInt_pushBack(long jarg1, ListInt jarg1_, int jarg2);
  public final static native int ListInt_get(long jarg1, ListInt jarg1_, int jarg2);
  public final static native void delete_ListInt(long jarg1);
  public final static native long new_VectorListInt__SWIG_0();
  public final static native long new_VectorListInt__SWIG_1(long jarg1);
  public final static native long VectorListInt_size(long jarg1, VectorListInt jarg1_);
  public final static native long VectorListInt_capacity(long jarg1, VectorListInt jarg1_);
  public final static native void VectorListInt_reserve(long jarg1, VectorListInt jarg1_, long jarg2);
  public final static native boolean VectorListInt_empty(long jarg1, VectorListInt jarg1_);
  public final static native void VectorListInt_clear(long jarg1, VectorListInt jarg1_);
  public final static native void VectorListInt_pushBack(long jarg1, VectorListInt jarg1_, long jarg2, ListInt jarg2_);
  public final static native long VectorListInt_get(long jarg1, VectorListInt jarg1_, int jarg2);
  public final static native void VectorListInt_set(long jarg1, VectorListInt jarg1_, int jarg2, long jarg3, ListInt jarg3_);
  public final static native void delete_VectorListInt(long jarg1);
  public final static native long new_VectorListString__SWIG_0();
  public final static native long new_VectorListString__SWIG_1(long jarg1);
  public final static native long VectorListString_size(long jarg1, VectorListString jarg1_);
  public final static native long VectorListString_capacity(long jarg1, VectorListString jarg1_);
  public final static native void VectorListString_reserve(long jarg1, VectorListString jarg1_, long jarg2);
  public final static native boolean VectorListString_empty(long jarg1, VectorListString jarg1_);
  public final static native void VectorListString_clear(long jarg1, VectorListString jarg1_);
  public final static native void VectorListString_pushBack(long jarg1, VectorListString jarg1_, long jarg2, ListString jarg2_);
  public final static native long VectorListString_get(long jarg1, VectorListString jarg1_, int jarg2);
  public final static native void VectorListString_set(long jarg1, VectorListString jarg1_, int jarg2, long jarg3, ListString jarg3_);
  public final static native void delete_VectorListString(long jarg1);
  public final static native long new_VectorString__SWIG_0();
  public final static native long new_VectorString__SWIG_1(long jarg1);
  public final static native long VectorString_size(long jarg1, VectorString jarg1_);
  public final static native long VectorString_capacity(long jarg1, VectorString jarg1_);
  public final static native void VectorString_reserve(long jarg1, VectorString jarg1_, long jarg2);
  public final static native boolean VectorString_empty(long jarg1, VectorString jarg1_);
  public final static native void VectorString_clear(long jarg1, VectorString jarg1_);
  public final static native void VectorString_pushBack(long jarg1, VectorString jarg1_, String jarg2);
  public final static native String VectorString_get(long jarg1, VectorString jarg1_, int jarg2);
  public final static native void VectorString_set(long jarg1, VectorString jarg1_, int jarg2, String jarg3);
  public final static native void delete_VectorString(long jarg1);
  public final static native long new_PairDoubleString__SWIG_0();
  public final static native long new_PairDoubleString__SWIG_1(double jarg1, String jarg2);
  public final static native long new_PairDoubleString__SWIG_2(long jarg1, PairDoubleString jarg1_);
  public final static native void PairDoubleString_first_set(long jarg1, PairDoubleString jarg1_, double jarg2);
  public final static native double PairDoubleString_first_get(long jarg1, PairDoubleString jarg1_);
  public final static native void PairDoubleString_second_set(long jarg1, PairDoubleString jarg1_, String jarg2);
  public final static native String PairDoubleString_second_get(long jarg1, PairDoubleString jarg1_);
  public final static native void delete_PairDoubleString(long jarg1);
  public final static native long new_VectorPairDoubleString__SWIG_0();
  public final static native long new_VectorPairDoubleString__SWIG_1(long jarg1);
  public final static native long VectorPairDoubleString_size(long jarg1, VectorPairDoubleString jarg1_);
  public final static native long VectorPairDoubleString_capacity(long jarg1, VectorPairDoubleString jarg1_);
  public final static native void VectorPairDoubleString_reserve(long jarg1, VectorPairDoubleString jarg1_, long jarg2);
  public final static native boolean VectorPairDoubleString_empty(long jarg1, VectorPairDoubleString jarg1_);
  public final static native void VectorPairDoubleString_clear(long jarg1, VectorPairDoubleString jarg1_);
  public final static native void VectorPairDoubleString_pushBack(long jarg1, VectorPairDoubleString jarg1_, long jarg2, PairDoubleString jarg2_);
  public final static native long VectorPairDoubleString_get(long jarg1, VectorPairDoubleString jarg1_, int jarg2);
  public final static native void VectorPairDoubleString_set(long jarg1, VectorPairDoubleString jarg1_, int jarg2, long jarg3, PairDoubleString jarg3_);
  public final static native void delete_VectorPairDoubleString(long jarg1);
  public final static native long new_TreeIteratorNode__SWIG_0();
  public final static native long new_TreeIteratorNode__SWIG_1(long jarg1, TreeNode jarg1_);
  public final static native long new_TreeIteratorNode__SWIG_2(long jarg1, TreeIteratorNode jarg1_);
  public final static native void delete_TreeIteratorNode(long jarg1);
  public final static native long TreeIteratorNode___ref__(long jarg1, TreeIteratorNode jarg1_);
  public final static native long TreeIteratorNode___deref__(long jarg1, TreeIteratorNode jarg1_);
  public final static native boolean TreeIteratorNode_operator_equal(long jarg1, TreeIteratorNode jarg1_, long jarg2, TreeIteratorNode jarg2_);
  public final static native boolean TreeIteratorNode_operator_notequal(long jarg1, TreeIteratorNode jarg1_, long jarg2, TreeIteratorNode jarg2_);
  public final static native long TreeIteratorNode_info_get(long jarg1, TreeIteratorNode jarg1_);
  public final static native long TreeIteratorNode_numChildren(long jarg1, TreeIteratorNode jarg1_);
  public final static native long TreeIteratorNode_nthChild(long jarg1, TreeIteratorNode jarg1_, long jarg2);
  public final static native long TreeIteratorNode_getParent(long jarg1, TreeIteratorNode jarg1_);
  public final static native long TreeIteratorNode_nthChildRef(long jarg1, TreeIteratorNode jarg1_, long jarg2);
  public final static native boolean TreeIteratorNode_empty(long jarg1, TreeIteratorNode jarg1_);
  public final static native long new_GenericIteratorNode__SWIG_0();
  public final static native long new_GenericIteratorNode__SWIG_1(long jarg1, TreeNode jarg1_);
  public final static native long new_GenericIteratorNode__SWIG_2(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode___ref__(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode___deref__(long jarg1, GenericIteratorNode jarg1_);
  public final static native void delete_GenericIteratorNode(long jarg1);
  public final static native void GenericIteratorNode_info_set(long jarg1, GenericIteratorNode jarg1_, long jarg2, Node jarg2_);
  public final static native long GenericIteratorNode_info_get(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_operator_assignment(long jarg1, GenericIteratorNode jarg1_, long jarg2, TreeNode jarg2_);
  public final static native long GenericIteratorNode_numChildren(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_nthChild(long jarg1, GenericIteratorNode jarg1_, long jarg2);
  public final static native long GenericIteratorNode_getParent(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_nthChildRef(long jarg1, GenericIteratorNode jarg1_, long jarg2);
  public final static native long GenericIteratorNode_getInformation(long jarg1, GenericIteratorNode jarg1_);
  public final static native void GenericIteratorNode_appendChild(long jarg1, GenericIteratorNode jarg1_, long jarg2, TreeNode jarg2_);
  public final static native void GenericIteratorNode_hangChild__SWIG_0(long jarg1, GenericIteratorNode jarg1_, long jarg2, TreeNode jarg2_, boolean jarg3);
  public final static native void GenericIteratorNode_hangChild__SWIG_1(long jarg1, GenericIteratorNode jarg1_, long jarg2, TreeNode jarg2_);
  public final static native void GenericIteratorNode_clear(long jarg1, GenericIteratorNode jarg1_);
  public final static native boolean GenericIteratorNode_empty(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_siblingBegin(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_siblingEnd(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_siblingRbegin(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_siblingRend(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_begin(long jarg1, GenericIteratorNode jarg1_);
  public final static native long GenericIteratorNode_end(long jarg1, GenericIteratorNode jarg1_);
  public final static native long new_PreorderIteratorNode__SWIG_0();
  public final static native long new_PreorderIteratorNode__SWIG_1(long jarg1, PreorderIteratorNode jarg1_);
  public final static native long new_PreorderIteratorNode__SWIG_2(long jarg1, TreeNode jarg1_);
  public final static native long new_PreorderIteratorNode__SWIG_3(long jarg1, SiblingIteratorNode jarg1_);
  public final static native void delete_PreorderIteratorNode(long jarg1);
  public final static native long PreorderIteratorNode_operator_increment__SWIG_0(long jarg1, PreorderIteratorNode jarg1_);
  public final static native long PreorderIteratorNode_operator_decrement__SWIG_0(long jarg1, PreorderIteratorNode jarg1_);
  public final static native long PreorderIteratorNode_operator_increment__SWIG_1(long jarg1, PreorderIteratorNode jarg1_, int jarg2);
  public final static native long PreorderIteratorNode_operator_decrement__SWIG_1(long jarg1, PreorderIteratorNode jarg1_, int jarg2);
  public final static native long new_SiblingIteratorNode__SWIG_0();
  public final static native long new_SiblingIteratorNode__SWIG_1(long jarg1, SiblingIteratorNode jarg1_);
  public final static native long new_SiblingIteratorNode__SWIG_2(long jarg1, TreeNode jarg1_);
  public final static native void delete_SiblingIteratorNode(long jarg1);
  public final static native long SiblingIteratorNode_operator_increment__SWIG_0(long jarg1, SiblingIteratorNode jarg1_);
  public final static native long SiblingIteratorNode_operator_decrement__SWIG_0(long jarg1, SiblingIteratorNode jarg1_);
  public final static native long SiblingIteratorNode_operator_increment__SWIG_1(long jarg1, SiblingIteratorNode jarg1_, int jarg2);
  public final static native long SiblingIteratorNode_operator_decrement__SWIG_1(long jarg1, SiblingIteratorNode jarg1_, int jarg2);
  public final static native long new_TreeIteratorDepnode__SWIG_0();
  public final static native long new_TreeIteratorDepnode__SWIG_1(long jarg1, TreeDepnode jarg1_);
  public final static native long new_TreeIteratorDepnode__SWIG_2(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native void delete_TreeIteratorDepnode(long jarg1);
  public final static native long TreeIteratorDepnode___ref__(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native long TreeIteratorDepnode___deref__(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native boolean TreeIteratorDepnode_operator_equal(long jarg1, TreeIteratorDepnode jarg1_, long jarg2, TreeIteratorDepnode jarg2_);
  public final static native boolean TreeIteratorDepnode_operator_notequal(long jarg1, TreeIteratorDepnode jarg1_, long jarg2, TreeIteratorDepnode jarg2_);
  public final static native long TreeIteratorDepnode_info_get(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native long TreeIteratorDepnode_numChildren(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native long TreeIteratorDepnode_nthChild(long jarg1, TreeIteratorDepnode jarg1_, long jarg2);
  public final static native long TreeIteratorDepnode_getParent(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native long TreeIteratorDepnode_nthChildRef(long jarg1, TreeIteratorDepnode jarg1_, long jarg2);
  public final static native boolean TreeIteratorDepnode_empty(long jarg1, TreeIteratorDepnode jarg1_);
  public final static native long new_GenericIteratorDepnode__SWIG_0();
  public final static native long new_GenericIteratorDepnode__SWIG_1(long jarg1, TreeDepnode jarg1_);
  public final static native long new_GenericIteratorDepnode__SWIG_2(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode___ref__(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode___deref__(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native void delete_GenericIteratorDepnode(long jarg1);
  public final static native void GenericIteratorDepnode_info_set(long jarg1, GenericIteratorDepnode jarg1_, long jarg2, Depnode jarg2_);
  public final static native long GenericIteratorDepnode_info_get(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_operator_assignment(long jarg1, GenericIteratorDepnode jarg1_, long jarg2, TreeDepnode jarg2_);
  public final static native long GenericIteratorDepnode_numChildren(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_nthChild(long jarg1, GenericIteratorDepnode jarg1_, long jarg2);
  public final static native long GenericIteratorDepnode_getParent(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_nthChildRef(long jarg1, GenericIteratorDepnode jarg1_, long jarg2);
  public final static native long GenericIteratorDepnode_getInformation(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native void GenericIteratorDepnode_appendChild(long jarg1, GenericIteratorDepnode jarg1_, long jarg2, TreeDepnode jarg2_);
  public final static native void GenericIteratorDepnode_hangChild__SWIG_0(long jarg1, GenericIteratorDepnode jarg1_, long jarg2, TreeDepnode jarg2_, boolean jarg3);
  public final static native void GenericIteratorDepnode_hangChild__SWIG_1(long jarg1, GenericIteratorDepnode jarg1_, long jarg2, TreeDepnode jarg2_);
  public final static native void GenericIteratorDepnode_clear(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native boolean GenericIteratorDepnode_empty(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_siblingBegin(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_siblingEnd(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_siblingRbegin(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_siblingRend(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_begin(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long GenericIteratorDepnode_end(long jarg1, GenericIteratorDepnode jarg1_);
  public final static native long new_PreorderIteratorDepnode__SWIG_0();
  public final static native long new_PreorderIteratorDepnode__SWIG_1(long jarg1, PreorderIteratorDepnode jarg1_);
  public final static native long new_PreorderIteratorDepnode__SWIG_2(long jarg1, TreeDepnode jarg1_);
  public final static native long new_PreorderIteratorDepnode__SWIG_3(long jarg1, SiblingIteratorDepnode jarg1_);
  public final static native void delete_PreorderIteratorDepnode(long jarg1);
  public final static native long PreorderIteratorDepnode_operator_increment__SWIG_0(long jarg1, PreorderIteratorDepnode jarg1_);
  public final static native long PreorderIteratorDepnode_operator_decrement__SWIG_0(long jarg1, PreorderIteratorDepnode jarg1_);
  public final static native long PreorderIteratorDepnode_operator_increment__SWIG_1(long jarg1, PreorderIteratorDepnode jarg1_, int jarg2);
  public final static native long PreorderIteratorDepnode_operator_decrement__SWIG_1(long jarg1, PreorderIteratorDepnode jarg1_, int jarg2);
  public final static native long new_SiblingIteratorDepnode__SWIG_0();
  public final static native long new_SiblingIteratorDepnode__SWIG_1(long jarg1, SiblingIteratorDepnode jarg1_);
  public final static native long new_SiblingIteratorDepnode__SWIG_2(long jarg1, TreeDepnode jarg1_);
  public final static native void delete_SiblingIteratorDepnode(long jarg1);
  public final static native long SiblingIteratorDepnode_operator_increment__SWIG_0(long jarg1, SiblingIteratorDepnode jarg1_);
  public final static native long SiblingIteratorDepnode_operator_decrement__SWIG_0(long jarg1, SiblingIteratorDepnode jarg1_);
  public final static native long SiblingIteratorDepnode_operator_increment__SWIG_1(long jarg1, SiblingIteratorDepnode jarg1_, int jarg2);
  public final static native long SiblingIteratorDepnode_operator_decrement__SWIG_1(long jarg1, SiblingIteratorDepnode jarg1_, int jarg2);
  public final static native void TreeNode_info_set(long jarg1, TreeNode jarg1_, long jarg2, Node jarg2_);
  public final static native long TreeNode_info_get(long jarg1, TreeNode jarg1_);
  public final static native long new_TreeNode__SWIG_0();
  public final static native long new_TreeNode__SWIG_1(long jarg1, Node jarg1_);
  public final static native long new_TreeNode__SWIG_2(long jarg1, TreeNode jarg1_);
  public final static native long new_TreeNode__SWIG_3(long jarg1, PreorderIteratorNode jarg1_);
  public final static native void delete_TreeNode(long jarg1);
  public final static native long TreeNode_operator_assignment(long jarg1, TreeNode jarg1_, long jarg2, TreeNode jarg2_);
  public final static native long TreeNode_numChildren(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_nthChild(long jarg1, TreeNode jarg1_, long jarg2);
  public final static native long TreeNode_getParent(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_nthChildRef(long jarg1, TreeNode jarg1_, long jarg2);
  public final static native long TreeNode_getInformation(long jarg1, TreeNode jarg1_);
  public final static native void TreeNode_appendChild(long jarg1, TreeNode jarg1_, long jarg2, TreeNode jarg2_);
  public final static native void TreeNode_hangChild__SWIG_0(long jarg1, TreeNode jarg1_, long jarg2, TreeNode jarg2_, boolean jarg3);
  public final static native void TreeNode_hangChild__SWIG_1(long jarg1, TreeNode jarg1_, long jarg2, TreeNode jarg2_);
  public final static native void TreeNode_clear(long jarg1, TreeNode jarg1_);
  public final static native boolean TreeNode_empty(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_siblingBegin(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_siblingEnd(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_siblingRbegin(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_siblingRend(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_begin(long jarg1, TreeNode jarg1_);
  public final static native long TreeNode_end(long jarg1, TreeNode jarg1_);
  public final static native void TreeDepnode_info_set(long jarg1, TreeDepnode jarg1_, long jarg2, Depnode jarg2_);
  public final static native long TreeDepnode_info_get(long jarg1, TreeDepnode jarg1_);
  public final static native long new_TreeDepnode__SWIG_0();
  public final static native long new_TreeDepnode__SWIG_1(long jarg1, Depnode jarg1_);
  public final static native long new_TreeDepnode__SWIG_2(long jarg1, TreeDepnode jarg1_);
  public final static native long new_TreeDepnode__SWIG_3(long jarg1, PreorderIteratorDepnode jarg1_);
  public final static native void delete_TreeDepnode(long jarg1);
  public final static native long TreeDepnode_operator_assignment(long jarg1, TreeDepnode jarg1_, long jarg2, TreeDepnode jarg2_);
  public final static native long TreeDepnode_numChildren(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_nthChild(long jarg1, TreeDepnode jarg1_, long jarg2);
  public final static native long TreeDepnode_getParent(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_nthChildRef(long jarg1, TreeDepnode jarg1_, long jarg2);
  public final static native long TreeDepnode_getInformation(long jarg1, TreeDepnode jarg1_);
  public final static native void TreeDepnode_appendChild(long jarg1, TreeDepnode jarg1_, long jarg2, TreeDepnode jarg2_);
  public final static native void TreeDepnode_hangChild__SWIG_0(long jarg1, TreeDepnode jarg1_, long jarg2, TreeDepnode jarg2_, boolean jarg3);
  public final static native void TreeDepnode_hangChild__SWIG_1(long jarg1, TreeDepnode jarg1_, long jarg2, TreeDepnode jarg2_);
  public final static native void TreeDepnode_clear(long jarg1, TreeDepnode jarg1_);
  public final static native boolean TreeDepnode_empty(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_siblingBegin(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_siblingEnd(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_siblingRbegin(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_siblingRend(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_begin(long jarg1, TreeDepnode jarg1_);
  public final static native long TreeDepnode_end(long jarg1, TreeDepnode jarg1_);
  public final static native void Analysis_user_set(long jarg1, Analysis jarg1_, long jarg2, VectorString jarg2_);
  public final static native long Analysis_user_get(long jarg1, Analysis jarg1_);
  public final static native long new_Analysis__SWIG_0();
  public final static native long new_Analysis__SWIG_1(String jarg1, String jarg2);
  public final static native long Analysis_operator_assignment(long jarg1, Analysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native void delete_Analysis(long jarg1);
  public final static native void Analysis_setLemma(long jarg1, Analysis jarg1_, String jarg2);
  public final static native void Analysis_setTag(long jarg1, Analysis jarg1_, String jarg2);
  public final static native void Analysis_setProb(long jarg1, Analysis jarg1_, double jarg2);
  public final static native void Analysis_setDistance(long jarg1, Analysis jarg1_, double jarg2);
  public final static native void Analysis_setRetokenizable(long jarg1, Analysis jarg1_, long jarg2, ListWord jarg2_);
  public final static native boolean Analysis_hasProb(long jarg1, Analysis jarg1_);
  public final static native boolean Analysis_hasDistance(long jarg1, Analysis jarg1_);
  public final static native String Analysis_getLemma(long jarg1, Analysis jarg1_);
  public final static native String Analysis_getTag(long jarg1, Analysis jarg1_);
  public final static native String Analysis_getShortTag__SWIG_0(long jarg1, Analysis jarg1_);
  public final static native String Analysis_getShortTag__SWIG_1(long jarg1, Analysis jarg1_, String jarg2);
  public final static native double Analysis_getProb(long jarg1, Analysis jarg1_);
  public final static native double Analysis_getDistance(long jarg1, Analysis jarg1_);
  public final static native boolean Analysis_isRetokenizable(long jarg1, Analysis jarg1_);
  public final static native long Analysis_getRetokenizable(long jarg1, Analysis jarg1_);
  public final static native long Analysis_getSenses(long jarg1, Analysis jarg1_);
  public final static native void Analysis_setSenses(long jarg1, Analysis jarg1_, long jarg2);
  public final static native String Analysis_getSensesString(long jarg1, Analysis jarg1_);
  public final static native boolean Analysis_operator_lessthan(long jarg1, Analysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native boolean Analysis_operator_equal(long jarg1, Analysis jarg1_, long jarg2, Analysis jarg2_);
  public final static native boolean Analysis_isSelected__SWIG_0(long jarg1, Analysis jarg1_, int jarg2);
  public final static native boolean Analysis_isSelected__SWIG_1(long jarg1, Analysis jarg1_);
  public final static native void Analysis_markSelected__SWIG_0(long jarg1, Analysis jarg1_, int jarg2);
  public final static native void Analysis_markSelected__SWIG_1(long jarg1, Analysis jarg1_);
  public final static native void Analysis_unmarkSelected__SWIG_0(long jarg1, Analysis jarg1_, int jarg2);
  public final static native void Analysis_unmarkSelected__SWIG_1(long jarg1, Analysis jarg1_);
  public final static native void Word_user_set(long jarg1, Word jarg1_, long jarg2, VectorString jarg2_);
  public final static native long Word_user_get(long jarg1, Word jarg1_);
  public final static native long new_Word__SWIG_0();
  public final static native long new_Word__SWIG_1(String jarg1);
  public final static native long new_Word__SWIG_2(String jarg1, long jarg2, ListWord jarg2_);
  public final static native long new_Word__SWIG_3(String jarg1, long jarg2, ListAnalysis jarg2_, long jarg3, ListWord jarg3_);
  public final static native long new_Word__SWIG_4(long jarg1, Word jarg1_);
  public final static native long Word_operator_assignment(long jarg1, Word jarg1_, long jarg2, Word jarg2_);
  public final static native void delete_Word(long jarg1);
  public final static native void Word_copyAnalysis(long jarg1, Word jarg1_, long jarg2, Word jarg2_);
  public final static native int Word_getNSelected(long jarg1, Word jarg1_);
  public final static native int Word_getNUnselected(long jarg1, Word jarg1_);
  public final static native boolean Word_isMultiword(long jarg1, Word jarg1_);
  public final static native int Word_getNWordsMw(long jarg1, Word jarg1_);
  public final static native long Word_getWordsMw(long jarg1, Word jarg1_);
  public final static native String Word_getForm(long jarg1, Word jarg1_);
  public final static native String Word_getLcForm(long jarg1, Word jarg1_);
  public final static native long Word_selectedBegin__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native long Word_selectedBegin__SWIG_1(long jarg1, Word jarg1_);
  public final static native long Word_selectedEnd__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native long Word_selectedEnd__SWIG_1(long jarg1, Word jarg1_);
  public final static native long Word_unselectedBegin__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native long Word_unselectedBegin__SWIG_1(long jarg1, Word jarg1_);
  public final static native long Word_unselectedEnd__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native long Word_unselectedEnd__SWIG_1(long jarg1, Word jarg1_);
  public final static native String Word_getLemma__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native String Word_getLemma__SWIG_1(long jarg1, Word jarg1_);
  public final static native String Word_getTag__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native String Word_getTag__SWIG_1(long jarg1, Word jarg1_);
  public final static native String Word_getShortTag__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native String Word_getShortTag__SWIG_1(long jarg1, Word jarg1_);
  public final static native String Word_getShortTag__SWIG_2(long jarg1, Word jarg1_, String jarg2, int jarg3);
  public final static native String Word_getShortTag__SWIG_3(long jarg1, Word jarg1_, String jarg2);
  public final static native long Word_getSenses__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native long Word_getSenses__SWIG_1(long jarg1, Word jarg1_);
  public final static native String Word_getSensesString__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native String Word_getSensesString__SWIG_1(long jarg1, Word jarg1_);
  public final static native void Word_setSenses__SWIG_0(long jarg1, Word jarg1_, long jarg2, int jarg3);
  public final static native void Word_setSenses__SWIG_1(long jarg1, Word jarg1_, long jarg2);
  public final static native long Word_getSpanStart(long jarg1, Word jarg1_);
  public final static native long Word_getSpanFinish(long jarg1, Word jarg1_);
  public final static native boolean Word_foundInDict(long jarg1, Word jarg1_);
  public final static native void Word_setFoundInDict(long jarg1, Word jarg1_, boolean jarg2);
  public final static native boolean Word_hasRetokenizable(long jarg1, Word jarg1_);
  public final static native void Word_lockAnalysis(long jarg1, Word jarg1_);
  public final static native boolean Word_isLocked(long jarg1, Word jarg1_);
  public final static native void Word_addAlternative(long jarg1, Word jarg1_, long jarg2, Word jarg2_, double jarg3);
  public final static native void Word_setAlternatives(long jarg1, Word jarg1_, long jarg2);
  public final static native boolean Word_hasAlternatives(long jarg1, Word jarg1_);
  public final static native long Word_getAlternatives(long jarg1, Word jarg1_);
  public final static native long Word_alternativesBegin(long jarg1, Word jarg1_);
  public final static native long Word_alternativesEnd(long jarg1, Word jarg1_);
  public final static native void Word_addAnalysis(long jarg1, Word jarg1_, long jarg2, Analysis jarg2_);
  public final static native void Word_setAnalysis__SWIG_0(long jarg1, Word jarg1_, long jarg2, Analysis jarg2_);
  public final static native void Word_setAnalysis__SWIG_1(long jarg1, Word jarg1_, long jarg2, ListAnalysis jarg2_);
  public final static native void Word_setForm(long jarg1, Word jarg1_, String jarg2);
  public final static native void Word_setSpan(long jarg1, Word jarg1_, long jarg2, long jarg3);
  public final static native boolean Word_findTagMatch(long jarg1, Word jarg1_, long jarg2);
  public final static native int Word_getNAnalysis(long jarg1, Word jarg1_);
  public final static native void Word_unselectAllAnalysis__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native void Word_unselectAllAnalysis__SWIG_1(long jarg1, Word jarg1_);
  public final static native void Word_selectAllAnalysis__SWIG_0(long jarg1, Word jarg1_, int jarg2);
  public final static native void Word_selectAllAnalysis__SWIG_1(long jarg1, Word jarg1_);
  public final static native void Word_selectAnalysis__SWIG_0(long jarg1, Word jarg1_, long jarg2, int jarg3);
  public final static native void Word_selectAnalysis__SWIG_1(long jarg1, Word jarg1_, long jarg2);
  public final static native void Word_unselectAnalysis__SWIG_0(long jarg1, Word jarg1_, long jarg2, int jarg3);
  public final static native void Word_unselectAnalysis__SWIG_1(long jarg1, Word jarg1_, long jarg2);
  public final static native long Word_getAnalysis(long jarg1, Word jarg1_);
  public final static native long Word_analysisBegin(long jarg1, Word jarg1_);
  public final static native long Word_analysisEnd(long jarg1, Word jarg1_);
  public final static native long new_Node__SWIG_0();
  public final static native long new_Node__SWIG_1(String jarg1);
  public final static native void delete_Node(long jarg1);
  public final static native String Node_getNodeId(long jarg1, Node jarg1_);
  public final static native void Node_setNodeId(long jarg1, Node jarg1_, String jarg2);
  public final static native String Node_getLabel(long jarg1, Node jarg1_);
  public final static native long Node_getWord(long jarg1, Node jarg1_);
  public final static native void Node_setLabel(long jarg1, Node jarg1_, String jarg2);
  public final static native void Node_setWord(long jarg1, Node jarg1_, long jarg2, Word jarg2_);
  public final static native boolean Node_isHead(long jarg1, Node jarg1_);
  public final static native void Node_setHead(long jarg1, Node jarg1_, boolean jarg2);
  public final static native boolean Node_isChunk(long jarg1, Node jarg1_);
  public final static native void Node_setChunk(long jarg1, Node jarg1_, int jarg2);
  public final static native int Node_getChunkOrd(long jarg1, Node jarg1_);
  public final static native long new_ParseTree__SWIG_0();
  public final static native long new_ParseTree__SWIG_1(long jarg1, Node jarg1_);
  public final static native void delete_ParseTree(long jarg1);
  public final static native long new_Depnode__SWIG_0();
  public final static native long new_Depnode__SWIG_1(String jarg1);
  public final static native long new_Depnode__SWIG_2(long jarg1, Node jarg1_);
  public final static native void delete_Depnode(long jarg1);
  public final static native void Depnode_setLink(long jarg1, Depnode jarg1_, long jarg2, PreorderIteratorNode jarg2_);
  public final static native long Depnode_getLink(long jarg1, Depnode jarg1_);
  public final static native long Depnode_getLinkRef(long jarg1, Depnode jarg1_);
  public final static native void Depnode_setLabel(long jarg1, Depnode jarg1_, String jarg2);
  public final static native long new_DepTree__SWIG_0();
  public final static native long new_DepTree__SWIG_1(long jarg1, Depnode jarg1_);
  public final static native void delete_DepTree(long jarg1);
  public final static native long new_Sentence__SWIG_0();
  public final static native long new_Sentence__SWIG_1(long jarg1, ListWord jarg1_);
  public final static native long new_Sentence__SWIG_2(long jarg1, Sentence jarg1_);
  public final static native long Sentence_operator_assignment(long jarg1, Sentence jarg1_, long jarg2, Sentence jarg2_);
  public final static native void delete_Sentence(long jarg1);
  public final static native long Sentence_numKbest(long jarg1, Sentence jarg1_);
  public final static native void Sentence_setParseTree(long jarg1, Sentence jarg1_, long jarg2, ParseTree jarg2_);
  public final static native long Sentence_getParseTree(long jarg1, Sentence jarg1_);
  public final static native boolean Sentence_isParsed(long jarg1, Sentence jarg1_);
  public final static native long Sentence_getDepTree(long jarg1, Sentence jarg1_);
  public final static native void Sentence_setDepTree(long jarg1, Sentence jarg1_, long jarg2, DepTree jarg2_);
  public final static native boolean Sentence_isDepParsed(long jarg1, Sentence jarg1_);
  public final static native long Sentence_getWords(long jarg1, Sentence jarg1_);
  public final static native long Sentence_wordsBegin(long jarg1, Sentence jarg1_);
  public final static native long Sentence_wordsEnd(long jarg1, Sentence jarg1_);
  public final static native long new_Paragraph();
  public final static native void delete_Paragraph(long jarg1);
  public final static native long new_Document();
  public final static native void delete_Document(long jarg1);
  public final static native void Document_addPositive(long jarg1, Document jarg1_, String jarg2, String jarg3);
  public final static native int Document_getCorefGroup(long jarg1, Document jarg1_, String jarg2);
  public final static native long Document_getCorefNodes(long jarg1, Document jarg1_, int jarg2);
  public final static native boolean Document_isCoref(long jarg1, Document jarg1_, String jarg2, String jarg3);
  public final static native void Traces_TraceLevel_set(int jarg1);
  public final static native int Traces_TraceLevel_get();
  public final static native void Traces_TraceModule_set(long jarg1);
  public final static native long Traces_TraceModule_get();
  public final static native long new_Traces();
  public final static native void delete_Traces(long jarg1);
  public final static native long new_LangIdent(String jarg1);
  public final static native void delete_LangIdent(long jarg1);
  public final static native String LangIdent_identifyLanguage(long jarg1, LangIdent jarg1_, String jarg2, long jarg3);
  public final static native void LangIdent_rankLanguages(long jarg1, LangIdent jarg1_, long jarg2, VectorPairDoubleString jarg2_, String jarg3, long jarg4);
  public final static native long new_Tokenizer(String jarg1);
  public final static native void delete_Tokenizer(long jarg1);
  public final static native long Tokenizer_tokenize__SWIG_0(long jarg1, Tokenizer jarg1_, String jarg2);
  public final static native long Tokenizer_tokenize__SWIG_1(long jarg1, Tokenizer jarg1_, String jarg2, long jarg3);
  public final static native long new_Splitter(String jarg1);
  public final static native void delete_Splitter(long jarg1);
  public final static native long Splitter_split(long jarg1, Splitter jarg1_, long jarg2, ListWord jarg2_, boolean jarg3);
  public final static native void MacoOptions_Lang_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_Lang_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_AffixAnalysis_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_AffixAnalysis_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_MultiwordsDetection_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_MultiwordsDetection_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_NumbersDetection_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_NumbersDetection_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_PunctuationDetection_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_PunctuationDetection_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_DatesDetection_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_DatesDetection_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_QuantitiesDetection_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_QuantitiesDetection_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_DictionarySearch_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_DictionarySearch_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_ProbabilityAssignment_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_ProbabilityAssignment_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_OrthographicCorrection_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_OrthographicCorrection_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_UserMap_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_UserMap_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_NERecognition_set(long jarg1, MacoOptions jarg1_, int jarg2);
  public final static native int MacoOptions_NERecognition_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_LocutionsFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_LocutionsFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_QuantitiesFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_QuantitiesFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_AffixFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_AffixFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_ProbabilityFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_ProbabilityFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_DictionaryFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_DictionaryFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_NPdataFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_NPdataFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_PunctuationFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_PunctuationFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_CorrectorFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_CorrectorFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_UserMapFile_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_UserMapFile_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_Decimal_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_Decimal_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_Thousand_set(long jarg1, MacoOptions jarg1_, String jarg2);
  public final static native String MacoOptions_Thousand_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_ProbabilityThreshold_set(long jarg1, MacoOptions jarg1_, double jarg2);
  public final static native double MacoOptions_ProbabilityThreshold_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_InverseDict_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_InverseDict_get(long jarg1, MacoOptions jarg1_);
  public final static native void MacoOptions_RetokContractions_set(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native boolean MacoOptions_RetokContractions_get(long jarg1, MacoOptions jarg1_);
  public final static native long new_MacoOptions(String jarg1);
  public final static native void delete_MacoOptions(long jarg1);
  public final static native void MacoOptions_setActiveModules(long jarg1, MacoOptions jarg1_, boolean jarg2, boolean jarg3, boolean jarg4, boolean jarg5, boolean jarg6, boolean jarg7, boolean jarg8, boolean jarg9, boolean jarg10, boolean jarg11, boolean jarg12);
  public final static native void MacoOptions_setDataFiles(long jarg1, MacoOptions jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8, String jarg9, String jarg10);
  public final static native void MacoOptions_setNummericalPoints(long jarg1, MacoOptions jarg1_, String jarg2, String jarg3);
  public final static native void MacoOptions_setThreshold(long jarg1, MacoOptions jarg1_, double jarg2);
  public final static native void MacoOptions_setInverseDictionary(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native void MacoOptions_setRetokenizeContractions(long jarg1, MacoOptions jarg1_, boolean jarg2);
  public final static native long new_Maco(long jarg1, MacoOptions jarg1_);
  public final static native void delete_Maco(long jarg1);
  public final static native void Maco_analyze__SWIG_0(long jarg1, Maco jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Maco_analyze__SWIG_1(long jarg1, Maco jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_REMap(String jarg1);
  public final static native void delete_REMap(long jarg1);
  public final static native void REMap_analyze__SWIG_0(long jarg1, REMap jarg1_, long jarg2, Sentence jarg2_);
  public final static native void REMap_analyze__SWIG_1(long jarg1, REMap jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Numbers(String jarg1, String jarg2, String jarg3);
  public final static native void delete_Numbers(long jarg1);
  public final static native void Numbers_analyze__SWIG_0(long jarg1, Numbers jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Numbers_analyze__SWIG_1(long jarg1, Numbers jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Punts(String jarg1);
  public final static native void delete_Punts(long jarg1);
  public final static native void Punts_analyze__SWIG_0(long jarg1, Punts jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Punts_analyze__SWIG_1(long jarg1, Punts jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Dates(String jarg1);
  public final static native void delete_Dates(long jarg1);
  public final static native void Dates_analyze__SWIG_0(long jarg1, Dates jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Dates_analyze__SWIG_1(long jarg1, Dates jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Dictionary__SWIG_0(String jarg1, String jarg2, boolean jarg3, String jarg4, boolean jarg5, boolean jarg6);
  public final static native long new_Dictionary__SWIG_1(String jarg1, String jarg2, boolean jarg3, String jarg4, boolean jarg5);
  public final static native long new_Dictionary__SWIG_2(String jarg1, String jarg2, boolean jarg3, String jarg4);
  public final static native void delete_Dictionary(long jarg1);
  public final static native void Dictionary_searchForm(long jarg1, Dictionary jarg1_, String jarg2, long jarg3, ListAnalysis jarg3_);
  public final static native boolean Dictionary_annotateWord(long jarg1, Dictionary jarg1_, long jarg2, Word jarg2_, long jarg3, ListWord jarg3_);
  public final static native long Dictionary_getForms(long jarg1, Dictionary jarg1_, String jarg2, String jarg3);
  public final static native void Dictionary_analyze__SWIG_0(long jarg1, Dictionary jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Dictionary_analyze__SWIG_1(long jarg1, Dictionary jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Locutions(String jarg1);
  public final static native void delete_Locutions(long jarg1);
  public final static native void Locutions_addLocution(long jarg1, Locutions jarg1_, String jarg2);
  public final static native void Locutions_analyze__SWIG_0(long jarg1, Locutions jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Locutions_analyze__SWIG_1(long jarg1, Locutions jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Ner(String jarg1);
  public final static native void delete_Ner(long jarg1);
  public final static native void Ner_analyze__SWIG_0(long jarg1, Ner jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Ner_analyze__SWIG_1(long jarg1, Ner jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Quantities(String jarg1, String jarg2);
  public final static native void delete_Quantities(long jarg1);
  public final static native void Quantities_analyze__SWIG_0(long jarg1, Quantities jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Quantities_analyze__SWIG_1(long jarg1, Quantities jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Probabilities(String jarg1, String jarg2, double jarg3);
  public final static native void delete_Probabilities(long jarg1);
  public final static native void Probabilities_annotateWord(long jarg1, Probabilities jarg1_, long jarg2, Word jarg2_);
  public final static native void Probabilities_setActivateGuesser(long jarg1, Probabilities jarg1_, boolean jarg2);
  public final static native void Probabilities_analyze__SWIG_0(long jarg1, Probabilities jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Probabilities_analyze__SWIG_1(long jarg1, Probabilities jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_HmmTagger__SWIG_0(String jarg1, String jarg2, boolean jarg3, long jarg4, long jarg5);
  public final static native long new_HmmTagger__SWIG_1(String jarg1, String jarg2, boolean jarg3, long jarg4);
  public final static native void delete_HmmTagger(long jarg1);
  public final static native void HmmTagger_analyze__SWIG_0(long jarg1, HmmTagger jarg1_, long jarg2, Sentence jarg2_);
  public final static native void HmmTagger_analyze__SWIG_1(long jarg1, HmmTagger jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_RelaxTagger(String jarg1, int jarg2, double jarg3, double jarg4, boolean jarg5, long jarg6);
  public final static native void delete_RelaxTagger(long jarg1);
  public final static native void RelaxTagger_analyze__SWIG_0(long jarg1, RelaxTagger jarg1_, long jarg2, Sentence jarg2_);
  public final static native void RelaxTagger_analyze__SWIG_1(long jarg1, RelaxTagger jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Phonetics(String jarg1);
  public final static native void delete_Phonetics(long jarg1);
  public final static native String Phonetics_getSound(long jarg1, Phonetics jarg1_, String jarg2);
  public final static native void Phonetics_analyze__SWIG_0(long jarg1, Phonetics jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Phonetics_analyze__SWIG_1(long jarg1, Phonetics jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Nec(String jarg1);
  public final static native void delete_Nec(long jarg1);
  public final static native void Nec_analyze__SWIG_0(long jarg1, Nec jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Nec_analyze__SWIG_1(long jarg1, Nec jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_ChartParser(String jarg1);
  public final static native String ChartParser_getStartSymbol(long jarg1, ChartParser jarg1_);
  public final static native void ChartParser_analyze__SWIG_0(long jarg1, ChartParser jarg1_, long jarg2, Sentence jarg2_);
  public final static native void ChartParser_analyze__SWIG_1(long jarg1, ChartParser jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_DepTxala(String jarg1, String jarg2);
  public final static native void delete_DepTxala(long jarg1);
  public final static native void DepTxala_analyze__SWIG_0(long jarg1, DepTxala jarg1_, long jarg2, Sentence jarg2_);
  public final static native void DepTxala_analyze__SWIG_1(long jarg1, DepTxala jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_Senses(String jarg1);
  public final static native void delete_Senses(long jarg1);
  public final static native void Senses_analyze__SWIG_0(long jarg1, Senses jarg1_, long jarg2, Sentence jarg2_);
  public final static native void Senses_analyze__SWIG_1(long jarg1, Senses jarg1_, long jarg2, ListSentence jarg2_);
  public final static native long new_UkbWrap(String jarg1);
  public final static native void delete_UkbWrap(long jarg1);
  public final static native void UkbWrap_analyze__SWIG_0(long jarg1, UkbWrap jarg1_, long jarg2, Sentence jarg2_);
  public final static native void UkbWrap_analyze__SWIG_1(long jarg1, UkbWrap jarg1_, long jarg2, ListSentence jarg2_);
  public final static native void SenseInfo_sense_set(long jarg1, SenseInfo jarg1_, String jarg2);
  public final static native String SenseInfo_sense_get(long jarg1, SenseInfo jarg1_);
  public final static native void SenseInfo_parents_set(long jarg1, SenseInfo jarg1_, long jarg2, ListString jarg2_);
  public final static native long SenseInfo_parents_get(long jarg1, SenseInfo jarg1_);
  public final static native void SenseInfo_semfile_set(long jarg1, SenseInfo jarg1_, String jarg2);
  public final static native String SenseInfo_semfile_get(long jarg1, SenseInfo jarg1_);
  public final static native void SenseInfo_words_set(long jarg1, SenseInfo jarg1_, long jarg2, ListString jarg2_);
  public final static native long SenseInfo_words_get(long jarg1, SenseInfo jarg1_);
  public final static native void SenseInfo_tonto_set(long jarg1, SenseInfo jarg1_, long jarg2, ListString jarg2_);
  public final static native long SenseInfo_tonto_get(long jarg1, SenseInfo jarg1_);
  public final static native long new_SenseInfo(String jarg1, String jarg2);
  public final static native String SenseInfo_getParentsString(long jarg1, SenseInfo jarg1_);
  public final static native void delete_SenseInfo(long jarg1);
  public final static native long new_SemanticDB(String jarg1);
  public final static native void delete_SemanticDB(long jarg1);
  public final static native void SemanticDB_getWNKeys(long jarg1, SemanticDB jarg1_, String jarg2, String jarg3, String jarg4, long jarg5);
  public final static native long SemanticDB_getSenseWords(long jarg1, SemanticDB jarg1_, String jarg2);
  public final static native long SemanticDB_getWordSenses(long jarg1, SemanticDB jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native long SemanticDB_getSenseInfo(long jarg1, SemanticDB jarg1_, String jarg2);
  public final static native void Util_initLocale(String jarg1);
  public final static native int Util_wstring2int(String jarg1);
  public final static native String Util_int2wstring(int jarg1);
  public final static native double Util_wstring2double(String jarg1);
  public final static native String Util_double2wstring(double jarg1);
  public final static native long Util_wstring2longdouble(String jarg1);
  public final static native String Util_longdouble2wstring(long jarg1);
  public final static native String Util_vector2wstring(long jarg1, VectorString jarg1_, String jarg2);
  public final static native String Util_list2wstring(long jarg1, ListString jarg1_, String jarg2);
  public final static native String Util_pairlist2wstring(long jarg1, String jarg2, String jarg3);
  public final static native long Util_wstring2list(String jarg1, String jarg2);
  public final static native long Util_wstring2vector(String jarg1, String jarg2);
  public final static native long new_Util();
  public final static native void delete_Util(long jarg1);
  public final static native long GenericIteratorNode_SWIGUpcast(long jarg1);
  public final static native long PreorderIteratorNode_SWIGUpcast(long jarg1);
  public final static native long SiblingIteratorNode_SWIGUpcast(long jarg1);
  public final static native long GenericIteratorDepnode_SWIGUpcast(long jarg1);
  public final static native long PreorderIteratorDepnode_SWIGUpcast(long jarg1);
  public final static native long SiblingIteratorDepnode_SWIGUpcast(long jarg1);
  public final static native long Word_SWIGUpcast(long jarg1);
  public final static native long ParseTree_SWIGUpcast(long jarg1);
  public final static native long Depnode_SWIGUpcast(long jarg1);
  public final static native long DepTree_SWIGUpcast(long jarg1);
  public final static native long Sentence_SWIGUpcast(long jarg1);
  public final static native long Paragraph_SWIGUpcast(long jarg1);
  public final static native long Document_SWIGUpcast(long jarg1);
}
