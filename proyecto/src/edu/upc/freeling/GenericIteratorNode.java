/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.upc.freeling;

public class GenericIteratorNode extends TreeIteratorNode {
  private long swigCPtr;

  protected GenericIteratorNode(long cPtr, boolean cMemoryOwn) {
    super(freelingJNI.GenericIteratorNode_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GenericIteratorNode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        freelingJNI.delete_GenericIteratorNode(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GenericIteratorNode() {
    this(freelingJNI.new_GenericIteratorNode__SWIG_0(), true);
  }

  public GenericIteratorNode(TreeNode arg0) {
    this(freelingJNI.new_GenericIteratorNode__SWIG_1(TreeNode.getCPtr(arg0), arg0), true);
  }

  public GenericIteratorNode(GenericIteratorNode arg0) {
    this(freelingJNI.new_GenericIteratorNode__SWIG_2(GenericIteratorNode.getCPtr(arg0), arg0), true);
  }

  public TreeNode __ref__() {
    return new TreeNode(freelingJNI.GenericIteratorNode___ref__(swigCPtr, this), false);
  }

  public TreeNode __deref__() {
    long cPtr = freelingJNI.GenericIteratorNode___deref__(swigCPtr, this);
    return (cPtr == 0) ? null : new TreeNode(cPtr, false);
  }

  public void setInfo(Node value) {
    freelingJNI.GenericIteratorNode_info_set(swigCPtr, this, Node.getCPtr(value), value);
  }

  public Node getInfo() {
    long cPtr = freelingJNI.GenericIteratorNode_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Node(cPtr, false);
  }

  public TreeNode operator_assignment(TreeNode arg0) {
    return new TreeNode(freelingJNI.GenericIteratorNode_operator_assignment(swigCPtr, this, TreeNode.getCPtr(arg0), arg0), false);
  }

  public long numChildren() {
    return freelingJNI.GenericIteratorNode_numChildren(swigCPtr, this);
  }

  public SiblingIteratorNode nthChild(long arg0) {
    return new SiblingIteratorNode(freelingJNI.GenericIteratorNode_nthChild(swigCPtr, this, arg0), true);
  }

  public PreorderIteratorNode getParent() {
    return new PreorderIteratorNode(freelingJNI.GenericIteratorNode_getParent(swigCPtr, this), true);
  }

  public TreeNode nthChildRef(long arg0) {
    return new TreeNode(freelingJNI.GenericIteratorNode_nthChildRef(swigCPtr, this, arg0), false);
  }

  public Node getInformation() {
    return new Node(freelingJNI.GenericIteratorNode_getInformation(swigCPtr, this), false);
  }

  public void appendChild(TreeNode arg0) {
    freelingJNI.GenericIteratorNode_appendChild(swigCPtr, this, TreeNode.getCPtr(arg0), arg0);
  }

  public void hangChild(TreeNode arg0, boolean arg1) {
    freelingJNI.GenericIteratorNode_hangChild__SWIG_0(swigCPtr, this, TreeNode.getCPtr(arg0), arg0, arg1);
  }

  public void hangChild(TreeNode arg0) {
    freelingJNI.GenericIteratorNode_hangChild__SWIG_1(swigCPtr, this, TreeNode.getCPtr(arg0), arg0);
  }

  public void clear() {
    freelingJNI.GenericIteratorNode_clear(swigCPtr, this);
  }

  public boolean empty() {
    return freelingJNI.GenericIteratorNode_empty(swigCPtr, this);
  }

  public SiblingIteratorNode siblingBegin() {
    return new SiblingIteratorNode(freelingJNI.GenericIteratorNode_siblingBegin(swigCPtr, this), true);
  }

  public SiblingIteratorNode siblingEnd() {
    return new SiblingIteratorNode(freelingJNI.GenericIteratorNode_siblingEnd(swigCPtr, this), true);
  }

  public SiblingIteratorNode siblingRbegin() {
    return new SiblingIteratorNode(freelingJNI.GenericIteratorNode_siblingRbegin(swigCPtr, this), true);
  }

  public SiblingIteratorNode siblingRend() {
    return new SiblingIteratorNode(freelingJNI.GenericIteratorNode_siblingRend(swigCPtr, this), true);
  }

  public PreorderIteratorNode begin() {
    return new PreorderIteratorNode(freelingJNI.GenericIteratorNode_begin(swigCPtr, this), true);
  }

  public PreorderIteratorNode end() {
    return new PreorderIteratorNode(freelingJNI.GenericIteratorNode_end(swigCPtr, this), true);
  }

}
