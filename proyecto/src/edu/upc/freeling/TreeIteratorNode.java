/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.upc.freeling;

public class TreeIteratorNode {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected TreeIteratorNode(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TreeIteratorNode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        freelingJNI.delete_TreeIteratorNode(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TreeIteratorNode() {
    this(freelingJNI.new_TreeIteratorNode__SWIG_0(), true);
  }

  public TreeIteratorNode(TreeNode arg0) {
    this(freelingJNI.new_TreeIteratorNode__SWIG_1(TreeNode.getCPtr(arg0), arg0), true);
  }

  public TreeIteratorNode(TreeIteratorNode arg0) {
    this(freelingJNI.new_TreeIteratorNode__SWIG_2(TreeIteratorNode.getCPtr(arg0), arg0), true);
  }

  public TreeNode __ref__() {
    return new TreeNode(freelingJNI.TreeIteratorNode___ref__(swigCPtr, this), false);
  }

  public TreeNode __deref__() {
    long cPtr = freelingJNI.TreeIteratorNode___deref__(swigCPtr, this);
    return (cPtr == 0) ? null : new TreeNode(cPtr, false);
  }

  public boolean operator_equal(TreeIteratorNode arg0) {
    return freelingJNI.TreeIteratorNode_operator_equal(swigCPtr, this, TreeIteratorNode.getCPtr(arg0), arg0);
  }

  public boolean operator_notequal(TreeIteratorNode arg0) {
    return freelingJNI.TreeIteratorNode_operator_notequal(swigCPtr, this, TreeIteratorNode.getCPtr(arg0), arg0);
  }

  public Node getInfo() {
    long cPtr = freelingJNI.TreeIteratorNode_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Node(cPtr, false);
  }

  public long numChildren() {
    return freelingJNI.TreeIteratorNode_numChildren(swigCPtr, this);
  }

  public SiblingIteratorNode nthChild(long arg0) {
    return new SiblingIteratorNode(freelingJNI.TreeIteratorNode_nthChild(swigCPtr, this, arg0), true);
  }

  public PreorderIteratorNode getParent() {
    return new PreorderIteratorNode(freelingJNI.TreeIteratorNode_getParent(swigCPtr, this), true);
  }

  public TreeNode nthChildRef(long arg0) {
    return new TreeNode(freelingJNI.TreeIteratorNode_nthChildRef(swigCPtr, this, arg0), false);
  }

  public boolean empty() {
    return freelingJNI.TreeIteratorNode_empty(swigCPtr, this);
  }

}
