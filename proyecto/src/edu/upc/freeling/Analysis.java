/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.upc.freeling;

public class Analysis {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Analysis(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Analysis obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        freelingJNI.delete_Analysis(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setUser(VectorString value) {
    freelingJNI.Analysis_user_set(swigCPtr, this, VectorString.getCPtr(value), value);
  }

  public VectorString getUser() {
    long cPtr = freelingJNI.Analysis_user_get(swigCPtr, this);
    return (cPtr == 0) ? null : new VectorString(cPtr, false);
  }

  public Analysis() {
    this(freelingJNI.new_Analysis__SWIG_0(), true);
  }

  public Analysis(String arg0, String arg1) {
    this(freelingJNI.new_Analysis__SWIG_1(arg0, arg1), true);
  }

  public Analysis operator_assignment(Analysis arg0) {
    return new Analysis(freelingJNI.Analysis_operator_assignment(swigCPtr, this, Analysis.getCPtr(arg0), arg0), false);
  }

  public void setLemma(String arg0) {
    freelingJNI.Analysis_setLemma(swigCPtr, this, arg0);
  }

  public void setTag(String arg0) {
    freelingJNI.Analysis_setTag(swigCPtr, this, arg0);
  }

  public void setProb(double arg0) {
    freelingJNI.Analysis_setProb(swigCPtr, this, arg0);
  }

  public void setDistance(double arg0) {
    freelingJNI.Analysis_setDistance(swigCPtr, this, arg0);
  }

  public void setRetokenizable(ListWord arg0) {
    freelingJNI.Analysis_setRetokenizable(swigCPtr, this, ListWord.getCPtr(arg0), arg0);
  }

  public boolean hasProb() {
    return freelingJNI.Analysis_hasProb(swigCPtr, this);
  }

  public boolean hasDistance() {
    return freelingJNI.Analysis_hasDistance(swigCPtr, this);
  }

  public String getLemma() {
    return freelingJNI.Analysis_getLemma(swigCPtr, this);
  }

  public String getTag() {
    return freelingJNI.Analysis_getTag(swigCPtr, this);
  }

  public String getShortTag() {
    return freelingJNI.Analysis_getShortTag__SWIG_0(swigCPtr, this);
  }

  public String getShortTag(String arg0) {
    return freelingJNI.Analysis_getShortTag__SWIG_1(swigCPtr, this, arg0);
  }

  public double getProb() {
    return freelingJNI.Analysis_getProb(swigCPtr, this);
  }

  public double getDistance() {
    return freelingJNI.Analysis_getDistance(swigCPtr, this);
  }

  public boolean isRetokenizable() {
    return freelingJNI.Analysis_isRetokenizable(swigCPtr, this);
  }

  public ListWord getRetokenizable() {
    return new ListWord(freelingJNI.Analysis_getRetokenizable(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__listT_std__pairT_std__wstring_double_t_t getSenses() {
    return new SWIGTYPE_p_std__listT_std__pairT_std__wstring_double_t_t(freelingJNI.Analysis_getSenses(swigCPtr, this), true);
  }

  public void setSenses(SWIGTYPE_p_std__listT_std__pairT_std__wstring_double_t_t arg0) {
    freelingJNI.Analysis_setSenses(swigCPtr, this, SWIGTYPE_p_std__listT_std__pairT_std__wstring_double_t_t.getCPtr(arg0));
  }

  public String getSensesString() {
    return freelingJNI.Analysis_getSensesString(swigCPtr, this);
  }

  public boolean operator_lessthan(Analysis arg0) {
    return freelingJNI.Analysis_operator_lessthan(swigCPtr, this, Analysis.getCPtr(arg0), arg0);
  }

  public boolean operator_equal(Analysis arg0) {
    return freelingJNI.Analysis_operator_equal(swigCPtr, this, Analysis.getCPtr(arg0), arg0);
  }

  public boolean isSelected(int k) {
    return freelingJNI.Analysis_isSelected__SWIG_0(swigCPtr, this, k);
  }

  public boolean isSelected() {
    return freelingJNI.Analysis_isSelected__SWIG_1(swigCPtr, this);
  }

  public void markSelected(int k) {
    freelingJNI.Analysis_markSelected__SWIG_0(swigCPtr, this, k);
  }

  public void markSelected() {
    freelingJNI.Analysis_markSelected__SWIG_1(swigCPtr, this);
  }

  public void unmarkSelected(int k) {
    freelingJNI.Analysis_unmarkSelected__SWIG_0(swigCPtr, this, k);
  }

  public void unmarkSelected() {
    freelingJNI.Analysis_unmarkSelected__SWIG_1(swigCPtr, this);
  }

}
