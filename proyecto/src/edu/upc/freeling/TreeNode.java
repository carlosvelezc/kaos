/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.upc.freeling;

public class TreeNode {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected TreeNode(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TreeNode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        freelingJNI.delete_TreeNode(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setInfo(Node value) {
    freelingJNI.TreeNode_info_set(swigCPtr, this, Node.getCPtr(value), value);
  }

  public Node getInfo() {
    long cPtr = freelingJNI.TreeNode_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Node(cPtr, false);
  }

  public TreeNode() {
    this(freelingJNI.new_TreeNode__SWIG_0(), true);
  }

  public TreeNode(Node arg0) {
    this(freelingJNI.new_TreeNode__SWIG_1(Node.getCPtr(arg0), arg0), true);
  }

  public TreeNode(TreeNode arg0) {
    this(freelingJNI.new_TreeNode__SWIG_2(TreeNode.getCPtr(arg0), arg0), true);
  }

  public TreeNode(PreorderIteratorNode arg0) {
    this(freelingJNI.new_TreeNode__SWIG_3(PreorderIteratorNode.getCPtr(arg0), arg0), true);
  }

  public TreeNode operator_assignment(TreeNode arg0) {
    return new TreeNode(freelingJNI.TreeNode_operator_assignment(swigCPtr, this, TreeNode.getCPtr(arg0), arg0), false);
  }

  public long numChildren() {
    return freelingJNI.TreeNode_numChildren(swigCPtr, this);
  }

  public SiblingIteratorNode nthChild(long arg0) {
    return new SiblingIteratorNode(freelingJNI.TreeNode_nthChild(swigCPtr, this, arg0), true);
  }

  public PreorderIteratorNode getParent() {
    return new PreorderIteratorNode(freelingJNI.TreeNode_getParent(swigCPtr, this), true);
  }

  public TreeNode nthChildRef(long arg0) {
    return new TreeNode(freelingJNI.TreeNode_nthChildRef(swigCPtr, this, arg0), false);
  }

  public Node getInformation() {
    return new Node(freelingJNI.TreeNode_getInformation(swigCPtr, this), false);
  }

  public void appendChild(TreeNode arg0) {
    freelingJNI.TreeNode_appendChild(swigCPtr, this, TreeNode.getCPtr(arg0), arg0);
  }

  public void hangChild(TreeNode arg0, boolean arg1) {
    freelingJNI.TreeNode_hangChild__SWIG_0(swigCPtr, this, TreeNode.getCPtr(arg0), arg0, arg1);
  }

  public void hangChild(TreeNode arg0) {
    freelingJNI.TreeNode_hangChild__SWIG_1(swigCPtr, this, TreeNode.getCPtr(arg0), arg0);
  }

  public void clear() {
    freelingJNI.TreeNode_clear(swigCPtr, this);
  }

  public boolean empty() {
    return freelingJNI.TreeNode_empty(swigCPtr, this);
  }

  public SiblingIteratorNode siblingBegin() {
    return new SiblingIteratorNode(freelingJNI.TreeNode_siblingBegin(swigCPtr, this), true);
  }

  public SiblingIteratorNode siblingEnd() {
    return new SiblingIteratorNode(freelingJNI.TreeNode_siblingEnd(swigCPtr, this), true);
  }

  public SiblingIteratorNode siblingRbegin() {
    return new SiblingIteratorNode(freelingJNI.TreeNode_siblingRbegin(swigCPtr, this), true);
  }

  public SiblingIteratorNode siblingRend() {
    return new SiblingIteratorNode(freelingJNI.TreeNode_siblingRend(swigCPtr, this), true);
  }

  public PreorderIteratorNode begin() {
    return new PreorderIteratorNode(freelingJNI.TreeNode_begin(swigCPtr, this), true);
  }

  public PreorderIteratorNode end() {
    return new PreorderIteratorNode(freelingJNI.TreeNode_end(swigCPtr, this), true);
  }

}
